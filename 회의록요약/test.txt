# 회의록 요약

---

## **2024-12-12 (월)**  
### **주요 논의 사항**  
1. **시간제한 문제풀이**  
   - 유저가 정해진 시간 안에 문제를 풀이하도록 하는 기능 논의.  
   - 풀이 완료 시 정답 확인 → 성공 시 유저 문제 목록 테이블에 추가.  
   - 테스트 케이스 정답 확인 기능 필요.  

2. **핵심 기능 정리**  
   - 유저 관리: 히스토리 통계 (난이도, 태그, 랭킹).  
   - 문제 추천: DB 저장 + 추천 문제 제공 + 정기적 업데이트.  
   - 영어/한국어 지원.  
   - 풀기 싫은 태그 설정 (NOT) 및 원하는 태그 포함 (AND/OR 조건).  

3. **MSA 사용 이유 논의**  
   - **목적**: 시스템 분리와 확장성.  
   - **문제점**: 단일 시스템에서의 비효율성.  
   - **해결방법**: MSA 도입 후 서비스 간 독립성 증가.  
   - **효과**: 유지보수 용이성 및 성능 개선.  

4. **추가 기능 검토**  
   - AI 코드 분석: 성능 평가, 주석 추가, 코드 리뷰.  

5. **담당자 기능 배정**  
   - 다정: 시간제한 문제풀이.  
   - 정우: 테이블 설계 및 문제 추천.  
   - 승훈: 유저 관리.  
   - 진호: 유저 관리.  
   - 조은: 테이블 설계 및 문제 추천.  
   - 현정: 시간제한 문제풀이.

---

## **2024-12-13 (금)**  
### **주요 논의 사항**  
1. **Solved.ac API 유저 검증**  
   - 백준 티어 검증을 통해 유저 신뢰성 확보.  

2. **랭킹 정보 저장 방식**  
   - 문제별 빨리 푼 순서로 랭킹 표시.  
   - DB 저장 방식 최적화 (Batch 업데이트 검토).  

3. **OAuth 도입 여부**  
   - Google OAuth와 Solved.ac API 통합 검토.  

4. **TimeLimit Service 데이터 처리**  
   - 풀이 성공 시 DB 저장 및 User Service로 정보 전달 논의.  

---

## **2024-12-16 (월)**  
### **주요 논의 사항**  
1. **랭킹 갱신 주기 및 기준**  
   - 매일 12시 기준으로 점수 기반 랭킹 갱신.  
   - 점수 산정 방식: 문제 풀이 성공 1점, 100위 내 점수 차등 배분.  

2. **카프카 도입 논의**  
   - **TimeLimit → User**: 실시간 데이터 전송 필요.  
   - **User → Statistics**: 비실시간 데이터 통계 처리 가능.  

3. **통계 Dirty Bit 적용 검토**  
   - 업데이트되지 않은 사용자 데이터만 처리하여 비효율성 감소.  

4. **프론트엔드와 백엔드 연동**  
   - JSP를 프론트 서버에서 통합 관리.  
   - 각 서비스는 REST API로 통신.  

---

## **2024-12-20 (금)**  
### **주요 논의 사항**  
1. **CORS 문제 해결 방안**  
   - Solved.ac 핸들 확인 중 발생한 CORS 문제 논의.  
   - JWT 토큰 방식을 통한 해결책 검토.  

2. **문제 데이터 최적화**  
   - 문제 정보 저장 시간 감소를 위해 자동 스케줄링 적용 검토.  

3. **프론트 서버 설정**  
   - JSP 통합 관리 및 화면 이동 시 인증 처리 방안 논의.  
   - 로그인 유지 방식 (session, token, local storage) 논의.  

---

## **2024-12-23 (월)**  
### **주요 논의 사항**  
1. **Problem Service 문제 정보 업데이트**  
   - 기존: 7일에 한 번 자동 업데이트.  
   - 변경: `/problem/dbsave/problem` 호출 시 업데이트.  

2. **포트 번호 할당**  
   - Frontend: `3000`  
   - Gateway: `8080`  
   - User: `8081`  
   - Statistics: `8082`  
   - Problem: `8083`  
   - TimeLimit: `8084`  

3. **유저 정보 관리**  
   - 로그인 후 유저 정보를 token, session, local storage 중 어떤 방식으로 관리할지 논의.  

---

## **2024-12-27 (금)**  
### **주요 논의 사항**  
1. **Gateway 설정**  
   - 각 서비스 주소 매핑 후 Gateway에서 통합 관리.  

2. **프론트엔드와 인증 처리**  
   - 화면 이동 시 인증 방식을 인터셉터로 처리.  
   - 로그인 상태 유지 방안 검토.  

3. **기능 수정 및 추가 논의**  
   - Time Service: 풀이 성공 시 사용자 점수 +1 요청 추가.  
   - 난이도 데이터 타입 변경: `int → 문자`.  
